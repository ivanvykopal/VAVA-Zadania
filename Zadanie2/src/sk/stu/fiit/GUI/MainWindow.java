/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.GUI;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ItemListener;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lbAddJob = new javax.swing.JLabel();
        lbAddSpecialist = new javax.swing.JLabel();
        lbAddRent = new javax.swing.JLabel();
        lbAddEmployer = new javax.swing.JLabel();
        lbRemoveRent = new javax.swing.JLabel();
        lbJobs = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        pAddSpecialist = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        rbProgrammer = new javax.swing.JRadioButton();
        rbSpecialist = new javax.swing.JRadioButton();
        rbAdministrator = new javax.swing.JRadioButton();
        JPanel6 = new javax.swing.JPanel();
        pProgrammer = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfProgrammerPrax = new javax.swing.JTextField();
        tfProgrammerMD = new javax.swing.JTextField();
        cbProgrammerEducation = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProgrammerCertificate = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProgrammerType = new javax.swing.JTable();
        btnProgAddType = new javax.swing.JButton();
        btnProgAddCertificate = new javax.swing.JButton();
        btnProgRemoveType = new javax.swing.JButton();
        btnProgRemoveCertificate = new javax.swing.JButton();
        btnAddProgrammer = new javax.swing.JButton();
        pSpecialist = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfSpecialistPrax = new javax.swing.JTextField();
        tfSpecialistMD = new javax.swing.JTextField();
        cbSpecialistEducation = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbSpecialistCertificates = new javax.swing.JTable();
        btnSpecAddCertificate = new javax.swing.JButton();
        btnSpecRemoveCertificate = new javax.swing.JButton();
        chbAuditor = new javax.swing.JCheckBox();
        btnAddSpecialist = new javax.swing.JButton();
        pAdministrator = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tfAdministratorPrax = new javax.swing.JTextField();
        tfAdministratorMD = new javax.swing.JTextField();
        cbAdministratorEducation = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbAdmCertificate = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbAdmTypes = new javax.swing.JTable();
        btnAdmAddType = new javax.swing.JButton();
        btnAdmAddCertificate = new javax.swing.JButton();
        btnAdmRemoveType = new javax.swing.JButton();
        btnAdmRemoveCertificate = new javax.swing.JButton();
        btnAddAdministrator = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        tfAdministratorPlatform = new javax.swing.JTextField();
        pAddEmployer = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        tfField = new javax.swing.JTextField();
        tfEmployeesCount = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        btnChooseImage = new javax.swing.JButton();
        btnAddEmployer = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        lbAddEmployerImage = new javax.swing.JLabel();
        spCreateRent = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnChooseEmployerRent = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbSpecialists = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbChoosedSpecialists = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnCreateRent = new javax.swing.JButton();
        cbSpecialist = new javax.swing.JComboBox<>();
        btnChooseSpecialist = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        tbEmployersRent = new javax.swing.JTable();
        lbNameEmployer = new javax.swing.JLabel();
        lbFieldEmployer = new javax.swing.JLabel();
        lbCountEmployer = new javax.swing.JLabel();
        lbLogoEmployer = new javax.swing.JLabel();
        btnRemoveSpecialist = new javax.swing.JButton();
        pRemoveRent = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnRemoveRent = new javax.swing.JButton();
        btnChooseRent = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbChoosedSpecialistEmp = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbRents = new javax.swing.JTable();
        pViewJobs = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbJobs = new javax.swing.JTable();
        btnViewJob = new javax.swing.JButton();
        lbEmployerJob = new javax.swing.JLabel();
        lbNameJob = new javax.swing.JLabel();
        lbManDayJob = new javax.swing.JLabel();
        btnChooseJob = new javax.swing.JButton();
        pAddJob = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        tfJobManDay = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        tfNameJob = new javax.swing.JTextField();
        btnAddJob = new javax.swing.JButton();
        tfEmployerNameJob = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IT Profesia");
        setMinimumSize(new java.awt.Dimension(1500, 1000));
        setPreferredSize(new java.awt.Dimension(1500, 1000));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lbAddJob.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbAddJob.setText("Pridať pracovnú ponuku");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 32, 0, 0);
        jPanel1.add(lbAddJob, gridBagConstraints);

        lbAddSpecialist.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbAddSpecialist.setText("Pridať špecialistu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 96;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 32, 0, 6);
        jPanel1.add(lbAddSpecialist, gridBagConstraints);

        lbAddRent.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbAddRent.setText("Vytvoriť prenájom");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 32, 0, 0);
        jPanel1.add(lbAddRent, gridBagConstraints);

        lbAddEmployer.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbAddEmployer.setText("Pridať zamestnávateľa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 32, 0, 6);
        jPanel1.add(lbAddEmployer, gridBagConstraints);

        lbRemoveRent.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbRemoveRent.setText("Zrušiť prenájom");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 34;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 32, 305, 0);
        jPanel1.add(lbRemoveRent, gridBagConstraints);

        lbJobs.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbJobs.setText("Pracovné ponuky");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 53;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(304, 32, 0, 0);
        jPanel1.add(lbJobs, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(1600, 1000));
        jPanel5.setLayout(new java.awt.CardLayout());

        pAddSpecialist.setBackground(new java.awt.Color(255, 255, 255));
        pAddSpecialist.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 75, 5));

        buttonGroup.add(rbProgrammer);
        rbProgrammer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        rbProgrammer.setSelected(true);
        rbProgrammer.setText("Programátor");
        jPanel3.add(rbProgrammer);

        buttonGroup.add(rbSpecialist);
        rbSpecialist.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        rbSpecialist.setText("Bezpečnostný špecialista");
        jPanel3.add(rbSpecialist);

        buttonGroup.add(rbAdministrator);
        rbAdministrator.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        rbAdministrator.setText("Administrátor");
        jPanel3.add(rbAdministrator);

        pAddSpecialist.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        JPanel6.setBackground(new java.awt.Color(255, 255, 255));
        JPanel6.setLayout(new java.awt.CardLayout());

        pProgrammer.setBackground(new java.awt.Color(255, 255, 255));
        pProgrammer.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel6.setText("Cena za deň:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pProgrammer.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel7.setText("Dĺžka praxe:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 312, 0, 0);
        pProgrammer.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel8.setText("Najvyššie dosiahnuté vzdelanie:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pProgrammer.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel9.setText("Zaradenie:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pProgrammer.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel10.setText("Certifikáty:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 312, 0, 0);
        pProgrammer.add(jLabel10, gridBagConstraints);

        tfProgrammerPrax.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 28, 0, 0);
        pProgrammer.add(tfProgrammerPrax, gridBagConstraints);

        tfProgrammerMD.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 28, 0, 0);
        pProgrammer.add(tfProgrammerMD, gridBagConstraints);

        cbProgrammerEducation.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        cbProgrammerEducation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vyberte vzdelanie", "základné vzdelanie", "stredoškolské bez maturity", "stredoškolské s maturitou", "nadstavbové/vyššie odborné vzdelanie", "vysokoškolské I. stupňa", "vysokoškolské II. stupňa", "vysokoškolské III. stupňa" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 28, 0, 0);
        pProgrammer.add(cbProgrammerEducation, gridBagConstraints);

        tbProgrammerCertificate.getTableHeader().setFont(new Font("Arial", 1, 15));
        tbProgrammerCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbProgrammerCertificate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbProgrammerCertificate);
        if (tbProgrammerCertificate.getColumnModel().getColumnCount() > 0) {
            tbProgrammerCertificate.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 254;
        gridBagConstraints.ipady = 158;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 28, 0, 350);
        pProgrammer.add(jScrollPane1, gridBagConstraints);

        tbProgrammerType.getTableHeader().setFont(new Font("Arial", 1, 15));
        tbProgrammerType.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbProgrammerType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbProgrammerType);
        if (tbProgrammerType.getColumnModel().getColumnCount() > 0) {
            tbProgrammerType.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 254;
        gridBagConstraints.ipady = 158;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 28, 0, 350);
        pProgrammer.add(jScrollPane2, gridBagConstraints);

        btnProgAddType.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnProgAddType.setText("Pridať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 28, 0, 350);
        pProgrammer.add(btnProgAddType, gridBagConstraints);

        btnProgAddCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnProgAddCertificate.setText("Pridať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 28, 0, 350);
        pProgrammer.add(btnProgAddCertificate, gridBagConstraints);

        btnProgRemoveType.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnProgRemoveType.setText("Odobrať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 28, 0, 350);
        pProgrammer.add(btnProgRemoveType, gridBagConstraints);

        btnProgRemoveCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnProgRemoveCertificate.setText("Odobrať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 28, 0, 350);
        pProgrammer.add(btnProgRemoveCertificate, gridBagConstraints);

        btnAddProgrammer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAddProgrammer.setText("Pridať programátora");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.ipadx = 142;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(37, 28, 32, 350);
        pProgrammer.add(btnAddProgrammer, gridBagConstraints);

        JPanel6.add(pProgrammer, "card2");

        pSpecialist.setBackground(new java.awt.Color(255, 255, 255));
        pSpecialist.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel11.setText("Cena za deň:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(93, 312, 0, 0);
        pSpecialist.add(jLabel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel12.setText("Dĺžka praxe:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 312, 0, 0);
        pSpecialist.add(jLabel12, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel13.setText("Najvyššie dosiahnuté vzdelanie:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pSpecialist.add(jLabel13, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel15.setText("Certifikáty:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pSpecialist.add(jLabel15, gridBagConstraints);

        tfSpecialistPrax.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 28, 0, 0);
        pSpecialist.add(tfSpecialistPrax, gridBagConstraints);

        tfSpecialistMD.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(83, 28, 0, 0);
        pSpecialist.add(tfSpecialistMD, gridBagConstraints);

        cbSpecialistEducation.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        cbSpecialistEducation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vyberte vzdelanie", "základné vzdelanie", "stredoškolské bez maturity", "stredoškolské s maturitou", "nadstavbové/vyššie odborné vzdelanie", "vysokoškolské I. stupňa", "vysokoškolské II. stupňa", "vysokoškolské III. stupňa" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 28, 0, 0);
        pSpecialist.add(cbSpecialistEducation, gridBagConstraints);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(456, 456));

        tbSpecialistCertificates.getTableHeader().setFont(new Font("Arial", 1, 15));
        tbSpecialistCertificates.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbSpecialistCertificates.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbSpecialistCertificates);
        if (tbSpecialistCertificates.getColumnModel().getColumnCount() > 0) {
            tbSpecialistCertificates.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 254;
        gridBagConstraints.ipady = 158;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 28, 0, 350);
        pSpecialist.add(jScrollPane4, gridBagConstraints);

        btnSpecAddCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnSpecAddCertificate.setText("Pridať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 28, 0, 350);
        pSpecialist.add(btnSpecAddCertificate, gridBagConstraints);

        btnSpecRemoveCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnSpecRemoveCertificate.setText("Odobrať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 28, 0, 350);
        pSpecialist.add(btnSpecRemoveCertificate, gridBagConstraints);

        chbAuditor.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        chbAuditor.setText("Auditor bezpečnosti NBU");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(58, 28, 0, 0);
        pSpecialist.add(chbAuditor, gridBagConstraints);

        btnAddSpecialist.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAddSpecialist.setText("Pridať bezpečnostného špecialistu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 63;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(77, 28, 107, 350);
        pSpecialist.add(btnAddSpecialist, gridBagConstraints);

        JPanel6.add(pSpecialist, "card3");

        pAdministrator.setBackground(new java.awt.Color(255, 255, 255));
        pAdministrator.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel14.setText("Cena za deň:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 312, 0, 0);
        pAdministrator.add(jLabel14, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel16.setText("Dĺžka praxe:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(62, 312, 0, 0);
        pAdministrator.add(jLabel16, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel17.setText("Najvyššie dosiahnuté vzdelanie:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pAdministrator.add(jLabel17, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel18.setText("Zaradenie:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        pAdministrator.add(jLabel18, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel19.setText("Certifikáty:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 312, 0, 0);
        pAdministrator.add(jLabel19, gridBagConstraints);

        tfAdministratorPrax.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 28, 0, 0);
        pAdministrator.add(tfAdministratorPrax, gridBagConstraints);

        tfAdministratorMD.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 28, 0, 0);
        pAdministrator.add(tfAdministratorMD, gridBagConstraints);

        cbAdministratorEducation.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        cbAdministratorEducation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vyberte vzdelanie", "základné vzdelanie", "stredoškolské bez maturity", "stredoškolské s maturitou", "nadstavbové/vyššie odborné vzdelanie", "vysokoškolské I. stupňa", "vysokoškolské II. stupňa", "vysokoškolské III. stupňa" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 28, 0, 0);
        pAdministrator.add(cbAdministratorEducation, gridBagConstraints);

        tbAdmCertificate.getTableHeader().setFont(new Font("Arial", 1, 15));
        tbAdmCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbAdmCertificate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbAdmCertificate);
        if (tbAdmCertificate.getColumnModel().getColumnCount() > 0) {
            tbAdmCertificate.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 257;
        gridBagConstraints.ipady = 158;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 28, 0, 350);
        pAdministrator.add(jScrollPane3, gridBagConstraints);

        tbAdmTypes.getTableHeader().setFont(new Font("Arial", 1, 15));
        tbAdmTypes.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbAdmTypes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbAdmTypes);
        if (tbAdmTypes.getColumnModel().getColumnCount() > 0) {
            tbAdmTypes.getColumnModel().getColumn(0).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 254;
        gridBagConstraints.ipady = 158;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 28, 0, 350);
        pAdministrator.add(jScrollPane5, gridBagConstraints);

        btnAdmAddType.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAdmAddType.setText("Pridať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 28, 0, 350);
        pAdministrator.add(btnAdmAddType, gridBagConstraints);

        btnAdmAddCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAdmAddCertificate.setText("Pridať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 28, 0, 350);
        pAdministrator.add(btnAdmAddCertificate, gridBagConstraints);

        btnAdmRemoveType.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAdmRemoveType.setText("Odobrať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 28, 0, 350);
        pAdministrator.add(btnAdmRemoveType, gridBagConstraints);

        btnAdmRemoveCertificate.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAdmRemoveCertificate.setText("Odobrať záznam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 28, 0, 350);
        pAdministrator.add(btnAdmRemoveCertificate, gridBagConstraints);

        btnAddAdministrator.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAddAdministrator.setText("Pridať administrátora");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 137;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 28, 25, 350);
        pAdministrator.add(btnAddAdministrator, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel20.setText("Preferovaná platforma:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 312, 0, 0);
        pAdministrator.add(jLabel20, gridBagConstraints);

        tfAdministratorPlatform.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 270;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 28, 0, 0);
        pAdministrator.add(tfAdministratorPlatform, gridBagConstraints);

        JPanel6.add(pAdministrator, "card4");

        pAddSpecialist.add(JPanel6, java.awt.BorderLayout.CENTER);

        jPanel5.add(pAddSpecialist, "card2");

        pAddEmployer.setBackground(new java.awt.Color(255, 255, 255));
        pAddEmployer.setLayout(new java.awt.GridBagLayout());

        jLabel21.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel21.setText("Názov:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(260, 426, 0, 0);
        pAddEmployer.add(jLabel21, gridBagConstraints);

        jLabel22.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel22.setText("Oblasť podnikania:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(45, 426, 0, 0);
        pAddEmployer.add(jLabel22, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel23.setText("Počet zamestnancov:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 426, 0, 0);
        pAddEmployer.add(jLabel23, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel24.setText("Logo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 426, 0, 0);
        pAddEmployer.add(jLabel24, gridBagConstraints);

        tfField.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 245;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 120, 0, 426);
        pAddEmployer.add(tfField, gridBagConstraints);

        tfEmployeesCount.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 245;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 120, 0, 426);
        pAddEmployer.add(tfEmployeesCount, gridBagConstraints);

        tfName.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 245;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(255, 120, 0, 426);
        pAddEmployer.add(tfName, gridBagConstraints);

        btnChooseImage.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnChooseImage.setText("Vybrať súbor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 159;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(45, 120, 0, 426);
        pAddEmployer.add(btnChooseImage, gridBagConstraints);

        btnAddEmployer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAddEmployer.setText("Vytvoriť zamestnávateľa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 88;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 120, 337, 426);
        pAddEmployer.add(btnAddEmployer, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel25.setText("Vybraný súbor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 426, 25, 0);
        pAddEmployer.add(jLabel25, gridBagConstraints);

        lbAddEmployerImage.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 257;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 120, 0, 426);
        pAddEmployer.add(lbAddEmployerImage, gridBagConstraints);

        jPanel5.add(pAddEmployer, "card3");

        spCreateRent.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel26.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel26.setText("Logo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        jPanel2.add(jLabel26, gridBagConstraints);

        jLabel27.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel27.setText("Počet zamestnancov:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        jPanel2.add(jLabel27, gridBagConstraints);

        btnChooseEmployerRent.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnChooseEmployerRent.setText("Vybrať zamestnávateľa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 159;
        gridBagConstraints.insets = new java.awt.Insets(36, 250, 0, 250);
        jPanel2.add(btnChooseEmployerRent, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel28.setText("Oblasť podnikania:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(45, 312, 0, 0);
        jPanel2.add(jLabel28, gridBagConstraints);

        jLabel29.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel29.setText("Názov:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 312, 0, 0);
        jPanel2.add(jLabel29, gridBagConstraints);

        jScrollPane6.setPreferredSize(new java.awt.Dimension(200, 350));

        tbSpecialists.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbSpecialists.getTableHeader().setFont(new java.awt.Font("Arial", 1, 15));
        tbSpecialists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cena za deň", "Dĺžka praxe", "Vzdelanie", "Zaradenie", "Certifikáty", "Auditor", "Preferovaná platforma"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSpecialists.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(tbSpecialists);
        if (tbSpecialists.getColumnModel().getColumnCount() > 0) {
            tbSpecialists.getColumnModel().getColumn(0).setMinWidth(0);
            tbSpecialists.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(31, 25, 0, 25);
        jPanel2.add(jScrollPane6, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Vybraní špecialisti");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jScrollPane7.setPreferredSize(new java.awt.Dimension(250, 300));

        tbChoosedSpecialists.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbChoosedSpecialists.getTableHeader().setFont(new java.awt.Font("Arial", 1, 15));
        tbChoosedSpecialists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Typ", "Cena za deň", "Dĺžka praxe", "Vzdelanie", "Zaradenie", "Certifikáty", "Auditor", "Preferovaná platforma"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbChoosedSpecialists.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(tbChoosedSpecialists);
        if (tbChoosedSpecialists.getColumnModel().getColumnCount() > 0) {
            tbChoosedSpecialists.getColumnModel().getColumn(0).setMinWidth(0);
            tbChoosedSpecialists.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(31, 25, 0, 25);
        jPanel2.add(jScrollPane7, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Výber špecialistov");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        btnCreateRent.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnCreateRent.setText("Vytvor prenájom");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.ipadx = 158;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 25, 0);
        jPanel2.add(btnCreateRent, gridBagConstraints);

        cbSpecialist.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        cbSpecialist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Programátor", "Bezpečnostný konzultant", "Administrátor" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanel2.add(cbSpecialist, gridBagConstraints);

        btnChooseSpecialist.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnChooseSpecialist.setText("Vybrať špecialistu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.ipadx = 158;
        gridBagConstraints.insets = new java.awt.Insets(65, 250, 50, 250);
        jPanel2.add(btnChooseSpecialist, gridBagConstraints);

        tbEmployersRent.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbEmployersRent.getTableHeader().setFont(new java.awt.Font("Arial", 1, 15));
        tbEmployersRent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Názov", "Oblasť podnikania", "Počet zamestnancov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbEmployersRent.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane12.setViewportView(tbEmployersRent);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 25, 0, 25);
        jPanel2.add(jScrollPane12, gridBagConstraints);

        lbNameEmployer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel2.add(lbNameEmployer, gridBagConstraints);

        lbFieldEmployer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel2.add(lbFieldEmployer, gridBagConstraints);

        lbCountEmployer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel2.add(lbCountEmployer, gridBagConstraints);

        lbLogoEmployer.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel2.add(lbLogoEmployer, gridBagConstraints);

        btnRemoveSpecialist.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnRemoveSpecialist.setText("Odstrániť špecialistu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 159;
        gridBagConstraints.insets = new java.awt.Insets(36, 250, 0, 250);
        jPanel2.add(btnRemoveSpecialist, gridBagConstraints);

        spCreateRent.setViewportView(jPanel2);

        jPanel5.add(spCreateRent, "card5");

        pRemoveRent.setBackground(new java.awt.Color(255, 255, 255));
        pRemoveRent.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Zoznam aktívnych prenájmov");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        pRemoveRent.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Vybraní špecialisti");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        pRemoveRent.add(jLabel4, gridBagConstraints);

        btnRemoveRent.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnRemoveRent.setText("Odstrániť prenájom");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 0);
        pRemoveRent.add(btnRemoveRent, gridBagConstraints);

        btnChooseRent.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnChooseRent.setText("Vybrať prenájom");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        pRemoveRent.add(btnChooseRent, gridBagConstraints);

        jScrollPane8.setPreferredSize(new java.awt.Dimension(250, 300));

        tbChoosedSpecialistEmp.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbChoosedSpecialistEmp.getTableHeader().setFont(new java.awt.Font("Arial", 1, 15));
        tbChoosedSpecialistEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Typ", "Cena za deň", "Dĺžka praxe", "Vzdelanie", "Zaradenie", "Certifikáty", "Auditor", "Preferovaná platforma"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tbChoosedSpecialistEmp);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(31, 50, 0, 50);
        pRemoveRent.add(jScrollPane8, gridBagConstraints);

        jScrollPane9.setPreferredSize(new java.awt.Dimension(250, 300));

        tbRents.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbRents.getTableHeader().setFont(new java.awt.Font("Arial", 1, 15));
        tbRents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Zamestnávateľ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tbRents);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(31, 50, 0, 50);
        pRemoveRent.add(jScrollPane9, gridBagConstraints);

        jPanel5.add(pRemoveRent, "card5");

        pViewJobs.setBackground(new java.awt.Color(255, 255, 255));
        pViewJobs.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel5.setText("Aktuálne pracovné ponuky");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 0);
        pViewJobs.add(jLabel5, gridBagConstraints);

        jScrollPane10.setPreferredSize(new java.awt.Dimension(1000, 350));

        tbJobs.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbJobs.getTableHeader().setFont(new java.awt.Font("Arial", 1, 15));
        tbJobs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Zamestnávateľ", "Názov ponuky", "Cena za deň"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tbJobs);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 15, 25);
        pViewJobs.add(jScrollPane10, gridBagConstraints);

        btnViewJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnViewJob.setText("Zobraziť pracovnú ponuku");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 0);
        pViewJobs.add(btnViewJob, gridBagConstraints);

        lbEmployerJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        lbEmployerJob.setText("Zamestnávateľ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 300, 15, 0);
        pViewJobs.add(lbEmployerJob, gridBagConstraints);

        lbNameJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        lbNameJob.setText("Názov ponuky:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 300, 15, 0);
        pViewJobs.add(lbNameJob, gridBagConstraints);

        lbManDayJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        lbManDayJob.setText("Cena za deň:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 300, 15, 0);
        pViewJobs.add(lbManDayJob, gridBagConstraints);

        btnChooseJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnChooseJob.setText("Vytvoriť prenájom pre ponuku");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 0);
        pViewJobs.add(btnChooseJob, gridBagConstraints);

        jPanel5.add(pViewJobs, "card6");

        pAddJob.setBackground(new java.awt.Color(255, 255, 255));
        pAddJob.setLayout(new java.awt.GridBagLayout());

        jLabel30.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel30.setText("Zamestnávateľ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 25, 25, 50);
        pAddJob.add(jLabel30, gridBagConstraints);

        jLabel32.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel32.setText("Cena za deň:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 50);
        pAddJob.add(jLabel32, gridBagConstraints);

        tfJobManDay.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 25, 25, 25);
        pAddJob.add(tfJobManDay, gridBagConstraints);

        jLabel33.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel33.setText("Názov ponuky:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 50);
        pAddJob.add(jLabel33, gridBagConstraints);

        tfNameJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 25, 25, 25);
        pAddJob.add(tfNameJob, gridBagConstraints);

        btnAddJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnAddJob.setText("Pridať pracovnú ponuku");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.insets = new java.awt.Insets(50, 150, 150, 150);
        pAddJob.add(btnAddJob, gridBagConstraints);

        tfEmployerNameJob.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(45, 25, 25, 25);
        pAddJob.add(tfEmployerNameJob, gridBagConstraints);

        jPanel5.add(pAddJob, "card7");

        getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel6;
    private javax.swing.JButton btnAddAdministrator;
    private javax.swing.JButton btnAddEmployer;
    private javax.swing.JButton btnAddJob;
    private javax.swing.JButton btnAddProgrammer;
    private javax.swing.JButton btnAddSpecialist;
    private javax.swing.JButton btnAdmAddCertificate;
    private javax.swing.JButton btnAdmAddType;
    private javax.swing.JButton btnAdmRemoveCertificate;
    private javax.swing.JButton btnAdmRemoveType;
    private javax.swing.JButton btnChooseEmployerRent;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnChooseJob;
    private javax.swing.JButton btnChooseRent;
    private javax.swing.JButton btnChooseSpecialist;
    private javax.swing.JButton btnCreateRent;
    private javax.swing.JButton btnProgAddCertificate;
    private javax.swing.JButton btnProgAddType;
    private javax.swing.JButton btnProgRemoveCertificate;
    private javax.swing.JButton btnProgRemoveType;
    private javax.swing.JButton btnRemoveRent;
    private javax.swing.JButton btnRemoveSpecialist;
    private javax.swing.JButton btnSpecAddCertificate;
    private javax.swing.JButton btnSpecRemoveCertificate;
    private javax.swing.JButton btnViewJob;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> cbAdministratorEducation;
    private javax.swing.JComboBox<String> cbProgrammerEducation;
    private javax.swing.JComboBox<String> cbSpecialist;
    private javax.swing.JComboBox<String> cbSpecialistEducation;
    private javax.swing.JCheckBox chbAuditor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lbAddEmployer;
    private javax.swing.JLabel lbAddEmployerImage;
    private javax.swing.JLabel lbAddJob;
    private javax.swing.JLabel lbAddRent;
    private javax.swing.JLabel lbAddSpecialist;
    private javax.swing.JLabel lbCountEmployer;
    private javax.swing.JLabel lbEmployerJob;
    private javax.swing.JLabel lbFieldEmployer;
    private javax.swing.JLabel lbJobs;
    private javax.swing.JLabel lbLogoEmployer;
    private javax.swing.JLabel lbManDayJob;
    private javax.swing.JLabel lbNameEmployer;
    private javax.swing.JLabel lbNameJob;
    private javax.swing.JLabel lbRemoveRent;
    private javax.swing.JPanel pAddEmployer;
    private javax.swing.JPanel pAddJob;
    private javax.swing.JPanel pAddSpecialist;
    private javax.swing.JPanel pAdministrator;
    private javax.swing.JPanel pProgrammer;
    private javax.swing.JPanel pRemoveRent;
    private javax.swing.JPanel pSpecialist;
    private javax.swing.JPanel pViewJobs;
    private javax.swing.JRadioButton rbAdministrator;
    private javax.swing.JRadioButton rbProgrammer;
    private javax.swing.JRadioButton rbSpecialist;
    private javax.swing.JScrollPane spCreateRent;
    private javax.swing.JTable tbAdmCertificate;
    private javax.swing.JTable tbAdmTypes;
    private javax.swing.JTable tbChoosedSpecialistEmp;
    private javax.swing.JTable tbChoosedSpecialists;
    private javax.swing.JTable tbEmployersRent;
    private javax.swing.JTable tbJobs;
    private javax.swing.JTable tbProgrammerCertificate;
    private javax.swing.JTable tbProgrammerType;
    private javax.swing.JTable tbRents;
    private javax.swing.JTable tbSpecialistCertificates;
    private javax.swing.JTable tbSpecialists;
    private javax.swing.JTextField tfAdministratorMD;
    private javax.swing.JTextField tfAdministratorPlatform;
    private javax.swing.JTextField tfAdministratorPrax;
    private javax.swing.JTextField tfEmployeesCount;
    private javax.swing.JTextField tfEmployerNameJob;
    private javax.swing.JTextField tfField;
    private javax.swing.JTextField tfJobManDay;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfNameJob;
    private javax.swing.JTextField tfProgrammerMD;
    private javax.swing.JTextField tfProgrammerPrax;
    private javax.swing.JTextField tfSpecialistMD;
    private javax.swing.JTextField tfSpecialistPrax;
    // End of variables declaration//GEN-END:variables

    public JRadioButton getRbAdministrator() {
        return rbAdministrator;
    }

    public void setRbAdministrator(JRadioButton rbAdministrator) {
        this.rbAdministrator = rbAdministrator;
    }

    public JRadioButton getRbProgrammer() {
        return rbProgrammer;
    }

    public void setRbProgrammer(JRadioButton rbProgrammer) {
        this.rbProgrammer = rbProgrammer;
    }

    public JRadioButton getRbSpecialist() {
        return rbSpecialist;
    }

    public void setRbSpecialist(JRadioButton rbSpecialist) {
        this.rbSpecialist = rbSpecialist;
    }

    public JPanel getpAddEmployer() {
        return pAddEmployer;
    }

    public JPanel getpAddSpecialist() {
        return pAddSpecialist;
    }

    public JPanel getpAdministrator() {
        return pAdministrator;
    }

    public JPanel getpProgrammer() {
        return pProgrammer;
    }

    public JPanel getpSpecialist() {
        return pSpecialist;
    }

    public JButton getBtnAddProgrammer() {
        return btnAddProgrammer;
    }

    public JButton getBtnProgAddCertificate() {
        return btnProgAddCertificate;
    }

    public JButton getBtnProgAddType() {
        return btnProgAddType;
    }

    public JButton getBtnProgRemoveCertificate() {
        return btnProgRemoveCertificate;
    }

    public JButton getBtnProgRemoveType() {
        return btnProgRemoveType;
    }

    public JComboBox<String> getCbProgrammerEducation() {
        return cbProgrammerEducation;
    }

    public Double getTfProgrammerMD() {
        try {
            if (tfProgrammerMD.getText().trim().equals("")) {
                return 0.;
            }
            return Double.parseDouble(tfProgrammerMD.getText().trim());
        } catch (NumberFormatException e) {
            return -1.;
        }
    }

    public Integer getTfProgrammerPrax() {
        try {
            if (tfProgrammerPrax.getText().trim().equals("")) {
                return 0;
            }
            return Integer.parseInt(tfProgrammerPrax.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    public JLabel getLbAddEmployer() {
        return lbAddEmployer;
    }

    public JLabel getLbAddRent() {
        return lbAddRent;
    }

    public JLabel getLbAddSpecialist() {
        return lbAddSpecialist;
    }

    public JLabel getLbJobs() {
        return lbJobs;
    }

    public JLabel getLbRemoveRent() {
        return lbRemoveRent;
    }

    public Double getTfAdministratorMD() {
        try {
            if (tfAdministratorMD.getText().trim().equals("")) {
                return 0.;
            }
            return Double.parseDouble(tfAdministratorMD.getText().trim());
        } catch (NumberFormatException e) {
            return -1.;
        }
    }

    public String getTfAdministratorPlatform() {
        return tfAdministratorPlatform.getText().trim();
    }

    public Integer getTfAdministratorPrax() {
        try {
            if (tfAdministratorPrax.getText().trim().equals("")) {
                return 0;
            }
            return Integer.parseInt(tfAdministratorPrax.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    public DefaultTableModel getTbProgrammerCertificate() {
        return (DefaultTableModel) tbProgrammerCertificate.getModel();
    }

    public DefaultTableModel getTbProgrammerType() {
        return (DefaultTableModel) tbProgrammerType.getModel();
    }

    public JButton getBtnAdmAddCertificate() {
        return btnAdmAddCertificate;
    }

    public JButton getBtnAdmAddType() {
        return btnAdmAddType;
    }

    public JButton getBtnAdmRemoveCertificate() {
        return btnAdmRemoveCertificate;
    }

    public JButton getBtnAdmRemoveType() {
        return btnAdmRemoveType;
    }

    public JComboBox<String> getCbAdministratorEducation() {
        return cbAdministratorEducation;
    }

    public DefaultTableModel getTbAdmCertificate() {
        return (DefaultTableModel) tbAdmCertificate.getModel();
    }

    public DefaultTableModel getTbAdmTypes() {
        return (DefaultTableModel) tbAdmTypes.getModel();
    }

    public JButton getBtnAddAdministrator() {
        return btnAddAdministrator;
    }

    public JButton getBtnAddSpecialist() {
        return btnAddSpecialist;
    }

    public JButton getBtnSpecAddCertificate() {
        return btnSpecAddCertificate;
    }

    public JButton getBtnSpecRemoveCertificate() {
        return btnSpecRemoveCertificate;
    }

    public JComboBox<String> getCbSpecialistEducation() {
        return cbSpecialistEducation;
    }

    public JCheckBox getChbAuditor() {
        return chbAuditor;
    }

    public Double getTfSpecialistMD() {
        try {
            if (tfSpecialistMD.getText().trim().equals("")) {
                return 0.;
            }
            return Double.parseDouble(tfSpecialistMD.getText().trim());
        } catch (NumberFormatException e) {
            return -1.;
        }
    }

    public Integer getTfSpecialistPrax() {
        try {
            if (tfSpecialistPrax.getText().trim().equals("")) {
                return 0;
            }
            return Integer.parseInt(tfSpecialistPrax.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    public DefaultTableModel getTbSpecialistCertificates() {
        return (DefaultTableModel) tbSpecialistCertificates.getModel();
    }

    public JButton getBtnAddEmployer() {
        return btnAddEmployer;
    }

    public JButton getBtnChooseImage() {
        return btnChooseImage;
    }

    public Integer getTfEmployeesCount() {
        try {
            if (tfEmployeesCount.getText().trim().equals("")) {
                return 0;
            }
            return Integer.parseInt(tfEmployeesCount.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    public String getTfField() {
        return tfField.getText().trim();
    }

    public String getTfName() {
        return tfName.getText().trim();
    }

    public void setLbAddEmployerImage(ImageIcon image) {
        if (image == null) {
            this.lbAddEmployerImage.setPreferredSize(new Dimension(0,0));
            this.lbAddEmployerImage.setIcon(image);
        } else {
            this.lbAddEmployerImage.setPreferredSize(new Dimension(300,300));
            this.lbAddEmployerImage.setIcon(new ImageIcon(image.getImage().getScaledInstance(300, 300, Image.SCALE_SMOOTH)));
        }
    }

    public JButton getBtnChooseEmployerRent() {
        return btnChooseEmployerRent;
    }

    public JButton getBtnChooseSpecialist() {
        return btnChooseSpecialist;
    }

    public JComboBox<String> getCbSpecialist() {
        return cbSpecialist;
    }

    public JPanel getpRemoveRent() {
        return pRemoveRent;
    }

    public JScrollPane getSpCreateRent() {
        return spCreateRent;
    }

    public JButton getBtnCreateRent() {
        return btnCreateRent;
    }

    public DefaultTableModel getTbChoosedSpecialistsModel() {
        return (DefaultTableModel) tbChoosedSpecialists.getModel();
    }
    
    public JTable getTbChoosedSpecialistsTable() {
        return tbChoosedSpecialists;
    }

    public DefaultTableModel getTbSpecialistsModel() {
        return (DefaultTableModel) tbSpecialists.getModel();
    }

    public JTable getTbSpecialistTable() {
        return tbSpecialists;
    }

    public JButton getBtnChooseRent() {
        return btnChooseRent;
    }

    public JButton getBtnRemoveRent() {
        return btnRemoveRent;
    }

    public JButton getBtnViewJob() {
        return btnViewJob;
    }

    public JLabel getLbAddJob() {
        return lbAddJob;
    }

    public void setLbNameJob(String text) {
        lbNameJob.setText(text);
    }

    public void setLbManDayJob(String text) {
        lbManDayJob.setText(text);
    }

    public void setLbEmployerJob(String text) {
        lbEmployerJob.setText(text);
    }
    
    public String getTfEmployerNameJob() {
        return tfEmployerNameJob.getText().trim();
    }
    
    public void setTfEmployerNameJob(String text) {
        tfEmployerNameJob.setText(text);
    }

    public JPanel getpViewJobs() {
        return pViewJobs;
    }

    public JTable getTbJobsTable() {
        return tbJobs;
    }
    
    public DefaultTableModel getTbJobsModel() {
        return (DefaultTableModel) tbJobs.getModel();
    }

    public JButton getBtnAddJob() {
        return btnAddJob;
    }

    public JPanel getpAddJob() {
        return pAddJob;
    }

    public Double getTfJobManDay() {
        try {
            if (tfJobManDay.getText().trim().equals("")) {
                return 0.;
            }
            return Double.parseDouble(tfJobManDay.getText().trim());
        } catch (NumberFormatException e) {
            return -1.;
        }
    }
    
    public String getTfNameJob() {
        return tfNameJob.getText().trim();
    }
    
    public JButton getBtnChooseJob() {
        return btnChooseJob;
    }
    
    public void setLbJobsFont(Font font) {
        lbJobs.setFont(font);
    }
    
    public void setLbAddEmployerFont(Font font) {
        lbAddEmployer.setFont(font);
    }
    
    public void setLbAddRentFont(Font font) {
        lbAddRent.setFont(font);
    }
    
    public void setLbAddSpecialistFont(Font font) {
        lbAddSpecialist.setFont(font);
    }
    
    public void setLbRemoveRentFont(Font font) {
        lbRemoveRent.setFont(font);
    }
    
    public void setLbAddJobFont(Font font) {
        lbAddJob.setFont(font);
    }

    public void setLbCountEmployer(String text) {
        this.lbCountEmployer.setText(text);
    }

    public void setLbFieldEmployer(String text) {
        this.lbFieldEmployer.setText(text);
    }

    public void setLbLogoEmployer(ImageIcon image) {
        if (image == null) {
            this.lbLogoEmployer.setPreferredSize(new Dimension(0,0));
            this.lbLogoEmployer.setIcon(image);
        } else {
            this.lbLogoEmployer.setPreferredSize(new Dimension(300,300));
            this.lbLogoEmployer.setIcon(new ImageIcon(image.getImage().getScaledInstance(300, 300, Image.SCALE_SMOOTH)));
        }
    }

    public void setLbNameEmployer(String text) {
        this.lbNameEmployer.setText(text);
    }

    public JTable getTbEmployersRentTable() {
        return tbEmployersRent;
    }
    
    public DefaultTableModel getTbEmployersRentModel() {
        return (DefaultTableModel) tbEmployersRent.getModel();
    }

    public DefaultTableModel getTbChoosedSpecialistEmp() {
        return (DefaultTableModel) tbChoosedSpecialistEmp.getModel();
    }

    public JTable getTbRentsTable() {
        return tbRents;
    }
    
    public DefaultTableModel getTbRentsModel() {
        return (DefaultTableModel) tbRents.getModel();
    }

    public void setTfAdministratorMD(String text) {
        this.tfAdministratorMD.setText(text);
    }

    public void setTfAdministratorPlatform(String text) {
        this.tfAdministratorPlatform.setText(text);
    }

    public void setTfAdministratorPrax(String text) {
        this.tfAdministratorPrax.setText(text);
    }

    public void setTfEmployeesCount(String text) {
        this.tfEmployeesCount.setText(text);
    }

    public void setTfJobManDay(String text) {
        this.tfJobManDay.setText(text);
    }

    public void setTfNameJob(String text) {
        this.tfNameJob.setText(text);
    }

    public void setTfName(String text) {
        this.tfName.setText(text);
    }

    public void setTfProgrammerMD(String text) {
        this.tfProgrammerMD.setText(text);
    }

    public void setTfProgrammerPrax(String text) {
        this.tfProgrammerPrax.setText(text);
    }

    public void setTfSpecialistMD(String text) {
        this.tfSpecialistMD.setText(text);
    }

    public void setTfSpecialistPrax(String text) {
        this.tfSpecialistPrax.setText(text);
    }

    public void setTfField(String text) {
        this.tfField.setText(text);
    }

    public JButton getBtnRemoveSpecialist() {
        return btnRemoveSpecialist;
    }
    
    
    public void removeListeners() {
//        ---- Add Programmer---
        for (MouseListener ml : btnAddProgrammer.getMouseListeners()) {
            btnAddProgrammer.removeMouseListener(ml);
        }
        for (MouseListener ml : btnProgAddCertificate.getMouseListeners()) {
            btnProgAddCertificate.removeMouseListener(ml);
        }
        for (MouseListener ml : btnProgAddType.getMouseListeners()) {
            btnProgAddType.removeMouseListener(ml);
        }
        for (MouseListener ml : btnProgRemoveCertificate.getMouseListeners()) {
            btnProgRemoveCertificate.removeMouseListener(ml);
        }
        for (MouseListener ml : btnProgRemoveType.getMouseListeners()) {
            btnProgRemoveType.removeMouseListener(ml);
        }
//        ---- Add Administrator----
        for (MouseListener ml : btnAddAdministrator.getMouseListeners()) {
            btnAddAdministrator.removeMouseListener(ml);
        }
        for (MouseListener ml : btnAdmAddCertificate.getMouseListeners()) {
            btnAdmAddCertificate.removeMouseListener(ml);
        }
        for (MouseListener ml : btnAdmAddType.getMouseListeners()) {
            btnAdmAddType.removeMouseListener(ml);
        }
        for (MouseListener ml : btnAdmRemoveCertificate.getMouseListeners()) {
            btnAdmRemoveCertificate.removeMouseListener(ml);
        }
        for (MouseListener ml : btnAdmRemoveType.getMouseListeners()) {
            btnAdmRemoveType.removeMouseListener(ml);
        }
//        ---- Add Specialist----
        for (MouseListener ml : btnAddSpecialist.getMouseListeners()) {
            btnAddSpecialist.removeMouseListener(ml);
        }
        for (MouseListener ml : btnSpecAddCertificate.getMouseListeners()) {
            btnSpecAddCertificate.removeMouseListener(ml);
        }
        for (MouseListener ml : btnSpecRemoveCertificate.getMouseListeners()) {
            btnSpecRemoveCertificate.removeMouseListener(ml);
        }
//        ---- Add Employer----
        for (MouseListener ml : btnAddEmployer.getMouseListeners()) {
            btnAddEmployer.removeMouseListener(ml);
        }
        for (MouseListener ml : btnChooseImage.getMouseListeners()) {
            btnChooseImage.removeMouseListener(ml);
        }
//        ---- Create Rent----        
        for (MouseListener ml : btnChooseEmployerRent.getMouseListeners()) {
            btnChooseEmployerRent.removeMouseListener(ml);
        }
        for (MouseListener ml : btnChooseSpecialist.getMouseListeners()) {
            btnChooseSpecialist.removeMouseListener(ml);
        }
        for (MouseListener ml : btnCreateRent.getMouseListeners()) {
            btnCreateRent.removeMouseListener(ml);
        }
        for (MouseListener ml : btnRemoveSpecialist.getMouseListeners()) {
            btnRemoveSpecialist.removeMouseListener(ml);
        }
//        ---- Remove Rent----   
        for (MouseListener ml : btnChooseRent.getMouseListeners()) {
            btnChooseRent.removeMouseListener(ml);
        }
        for (MouseListener ml : btnRemoveRent.getMouseListeners()) {
            btnRemoveRent.removeMouseListener(ml);
        }
//       ---- View Job----       
        for (MouseListener ml : btnViewJob.getMouseListeners()) {
            btnViewJob.removeMouseListener(ml);
        }
        for (MouseListener ml : btnChooseJob.getMouseListeners()) {
            btnChooseJob.removeMouseListener(ml);
        }
//       ---- Add Job----       
        for (MouseListener ml : btnAddJob.getMouseListeners()) {
            btnAddJob.removeMouseListener(ml);
        }
//      ItemListeners
        for (ItemListener il: cbSpecialist.getItemListeners()) {
            cbSpecialist.removeItemListener(il);
        }
        
    }

}
